<?php

use GuzzleHttp\Client;
use Symfony\Component\DomCrawler\Crawler;
use Symfony\Component\CssSelector\CssSelector;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\InvokeCommand;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Logger\LoggerChannelFactoryInterface;


/**
 * Implements hook_form_BASE_FORM_ID_alter() for resource node forms.
 */
function bne_resources_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  switch($form_id){
    case 'node_resources_form':
    case 'node_resources_edit_form':

      $form['field_url_bdh']['widget'][0]['uri']['#ajax'] = [
        'callback' => 'bne_resources_url_ajax_callback',
        'event' => 'change', // Ejecutar la función cuando el valor cambie.
        'progress' => [
          'type' => 'throbber',
          'message' => t('Scrapping Database...'),
        ],
      ];

      // Dentro de mymodule_form_node_resource_form_alter():
      $form['image_preview_small'] = [
        '#markup' => '<img id="small_image" src="" alt="Preview Small"/>',
        '#weight' => -5, // Ajusta el peso para mostrarlo en la parte superior del formulario.
      ];

      // Dentro de mymodule_form_node_resource_form_alter():
      $form['image_preview_big'] = [
        '#markup' => '<img src="" id="big_image" alt="Preview Big" />',
        '#weight' => -6, // Ajusta el peso para mostrarlo en la parte superior del formulario.
      ];
      $form['#attached']['library'][] = 'bne_resources/adminresources';

    break;

  }

}

function bne_resources_url_ajax_callback(array &$form, FormStateInterface $form_state, $form_id) {

  $response = new AjaxResponse();
  $url = $form_state->getValue('field_url_bdh')[0]['uri'];

  if(!empty($url)){
    try{

      $scrapped_data = bne_resources_scrape_url($url);
      $response->AddCommand(new InvokeCommand(null, 'resourcesUpdateData', [$scrapped_data]));
    } catch (\Exception $e) {
      // Registrar el error en el archivo de registro.
      $logger = \Drupal::logger('resources');
      $logger->error('Error al realizar el scraping: @error_message', ['@error_message' => $e->getMessage()]);
    }
  }

  return $response;
}

function bne_resources_scrape_url($url) {

  $client = new Client();
  $response = $client->get($url);
  $content = $response->getBody()->getContents();
  $crawler = new Crawler($content);

  // Extraer los datos requeridos del HTML utilizando el Crawler.
  $title = $crawler->filter('.entrada h1.valor')->text();
  $doc_id = str_replace('bdh', '', $crawler->filter('.entrada span.rrr')->text());

  $physical_description = $crawler->filterXpath("//div[@class='dato'][contains(text(), 'Descripción física')]/following-sibling::div[1]")->text('');
  $description_notes = $crawler->filterXpath("//div[@class='dato'][contains(text(), 'Descripción y notas')]/following-sibling::div[1]")->text('');
  $fechas = $crawler->filterXpath("//div[@class='dato'][contains(text(), 'Fecha')]/following-sibling::div[1]")->text('');
  $dates = BNEgetFecha($fechas);

  $small_image_id = "http://bdh-rd.bne.es/low.raw?id=$doc_id&name=00000001.jpg";
  $big_image_id = "http://bdh-rd.bne.es/pdf.raw?query=id:$doc_id&name=00000001.jpg&jpeg=true";
  $viewer_url = "http://bdh-rd.bne.es/viewer.vm?id=bdh$doc_id&page=1";

  return [
  'title' => $title,
  'small_image_id' => $small_image_id,
  'big_image_id' => $big_image_id,
  'viewer_url' => $viewer_url,
  'physical_description' => $physical_description,
  'description_notes' => $description_notes,
  'date_1' => $dates[0],
  'date_2' => $dates[1],
  ];
}


function BNEgetFecha($text){

  if(strlen($text) > 0){

    $text = str_replace("\t", "", $text);
    $text = str_replace("\r\n", "", $text);
    $text = str_replace("<br/>", "\n\r", $text);
    $text = str_replace("</div>", "", $text);
    $text = str_replace("  ", "", $text);

  }
  $text = str_replace("?", "", $text);
  if(strpos($text, "entre") !== false && strpos($text, "y") !== false ){
    $text = str_replace("entre", "", $text);
    $aFecha = explode("y", $text);
  }else{
    $aFecha[0] = $text;
    $aFecha[1] = "";
  }


  return $aFecha;
}
